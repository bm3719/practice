These are some sample interview questions grabbed online at
http://kundansingh.com/interview/

Many of these suck, but just using it for practice.

Logic questions 

10. Given a rectangular (cuboidal for the puritans) cake with a rectangular
    piece removed (any size or orientation), how would you cut the remainder of
    the cake into two equal halves with one straight cut of a knife ?

    A. 
    
11. You're given an array containing both positive and negative integers and
    required to find the subarray with the largest sum (O(N) a la KBL). Write a
    routine in C for the above.

    A. 
    
12. Given an array of size N in which every number is between 1 and N,
    determine if there are any duplicates in it. You are allowed to destroy the
    array if you like.

    A.
    
13. Given an array of characters which form a sentence of words, give an
    efficient algorithm to reverse the order of the words (not characters) in
    it.

    A.
    
14. How many points are there on the globe where by walking one mile south, one
    mile east and one mile north you reach the place where you started.

    A.
    
15. In a X's and 0's game (i.e. TIC TAC TOE) if you write a program for this
    give a fast way to generate the moves by the computer. I mean this should
    be the fastest way possible.

    A.
    
16. A version of the "There are three persons X Y Z, one of which always
    lies"..

    A. 

17. There are 3 ants at 3 corners of a triangle, they randomly start moving
    towards another corner.. what is the probability that they don't collide.

    A. 
    
18. If you are on a boat and you throw out a suitcase, Will the level of water
    increase.

    A. 

19. There are 4 men who want to cross a bridge. They all begin on the same
    side. You have 17 minutes to get all of them across to the other side. It
    is night. There is one flashlight. A maximum of two people can cross at one
    time. Any party who crosses, either 1 or 2 people, must have the flashlight
    with them. The flashlight must be walked back and forth, it cannot be
    thrown, etc. Each man walks at a different speed.  A pair must walk
    together at the rate of the slower mans pace.

    Man 1:1 minute to cross 
    Man 2: 2 minutes to cross 
    Man 3: 5 minutes to cross 
    Man 4: 10 minutes to cross 
 
    A.

20. You have 5 jars of pills. Each pill weighs 10 gram, except for contaminated
    pills contained in one jar, where each pill weighs 9 gm. Given a scale, how
    could you tell which jar had the contaminated pills in just one
    measurement?

    A.

21. One train leaves Los Angeles at 15 MPH heading for New York. Another train
    leaves from New York at 20mph heading for Los Angeles on the same track. If
    a bird, flying at 25mph, leaves from Los Angeles at the same time as the
    train and flies back and forth between the two trains until they collide,
    how far will the bird have traveled?

    A. 

22. Imagine that you have 26 constants, labelled A through Z. Each constant is
    assigned a value in the following way: A = 1; the rest of the values equal
    their position in the alphabet (B corresponds to the second position so it
    equals 2, C = 3, etc.) raised to the power of the preceeding constant
    value. So, B = 2 ^ (A's value), or B = 2^1 = 2. C = 3^2 = 9. D = 4^9, etc.,
    etc. Find the exact numerical value to the following equation:

    (X - A) * (X - B) * (X - C) * ... * (X - Y) * (X - Z) 

    A.

23. You have 12 balls. All of them are identical except one, which is either
    heavier or lighter than the rest - it is either hollow while the rest are
    solid, or solid while the rest are hollow. You have a simple two-armed
    scale, and are permitted three weighings. Can you identify the odd ball,
    and determine whether it is hollow or solid.

    A.

       
Programming questions that require thinking 

24. Write a routine to draw a circle (x ** 2 + y ** 2 = r ** 2) without making
    use of any floating point computations at all.

    A.

25. Given only putchar (no sprintf, itoa, etc.) write a routine putlong that
    prints out an unsigned long in decimal.

    A.

26. Give a one-line C expression to test whether a number is a power of 2. [No
    loops allowed - it's a simple test.]

    A.

27. Give a very good method to count the number of ones in a 32 bit
    number. (caution: looping through testing each bit is not a solution).

    A.

28. What are the different ways to say, the value of x can be either a 0 or a
    1.

    A.

29. I was given two lines of assembly code which found the absolute value of a
    number stored in two's complement form. I had to recognize what the code
    was doing.

    A.

30. Give a fast way to multiply a number by 7.

    A.

31. Write an efficient algo and C code to shuffle a pack of cards.. this one
    was a feedback process until we came up with one with no extra storage.

    A.

32. A real life problem - A square picture is cut into 16 sqaures and they are
    shuffled. Write a program to rearrange the 16 squares to get the original
    big square.

    A.

33. Consider the base -2 representation of numbers. (-2 instead of usual
    +2). Give the condition for a number represented in this form to be
    positive? Also, if P(A, B) is a function that takes two 0-1 strings A,B in
    this representation, when can we say that P(A,B) returns the sum of these
    two numbers?

    A.

34. Given an expression tree with no parentheses in it, write the program to
    give equivalent infix expression with parentheses inserted where necessary.

    A.

35. Given a maze with cheese at one place and a mouse at some entrance, write a
    program to direct the mouse to cheese correctly. (Assume there is a
    path). Following primitives are given: moveforward, turnright, turnleft,
    iswall?, ischeese?, eatcheese.

    A.

36. Give me an algorithm and C code to find the subarray with the largest sum
    given an array containing both positive and negative integers.

    A.

37. Write a function that returns the factorial of a number.

    A.

38. Write a function that computes the nth number in the Fibonacci sequence.

    A. 

39. Write an implementation of strlen(). 

    A.

40. Switch the integer values stored in two registers without using any
    additional memory.

    A.

41. Given two strings S1 and S2. Delete from S2 all those characters which
    occur in S1 also and finally create a clean S2 with the relevant characters
    deleted.

    A.

42. Write a small lexical analyzer - interviewer gave tokens. expressions like
    "a*b" etc.

    A.

43. Write a routine that prints out a 2-D array in spiral order!

    A.

44. How is the readers-writers problem solved? - using semaphores/ada .. etc.

    A.

45. Write code for reversing a linked list.

    A.

46. Write, efficient code for extracting unique elements from a sorted list of
    array. e.g. (1, 1, 3, 3, 3, 5, 5, 5, 9, 9, 9, 9) -> (1, 3, 5, 9).

    A.


Microsoft question

47. Given a rectangular (cuboidal for the puritans) cake with a rectangular
    piece removed (any size or orientation), how would you cut the remainder of
    the cake into two equal halves with one straight cut of a knife ?

    A.

48. You're given an array containing both positive and negative integers and
    required to find the subarray with the largest sum (O(N) a la KBL). Write a
    routine in C for the above.

    A.

49. Given an array of size N in which every number is between 1 and N,
    determine if there are any duplicates in it. You are allowed to destroy the
    array if you like.[I ended up giving about 4 or 5 different solutions for
    this, each supposedly better than the others ].

    A.

50. Write a routine to draw a circle (x ** 2 + y ** 2 = r ** 2) without making
    use of any floating point computations at all. [ This one had me stuck for
    quite some time and I first gave a solution that did have floating point
    computations ].

    A.

51. Given only putchar (no sprintf, itoa, etc.) write a routine putlong that
    prints out an unsigned long in decimal. [ I gave the obvious solution of
    taking % 10 and / 10, which gives us the decimal value in reverse
    order. This requires an array since we need to print it out in the correct
    order. The interviewer wasn't too pleased and asked me to give a solution
    which didn't need the array ].

    A.

52. Give a one-line C expression to test whether a number is a power of 2. [No
    loops allowed - it's a simple test.]

    A.

53. Given an array of characters which form a sentence of words, give an
    efficient algorithm to reverse the order of the words (not characters) in
    it.

    A.

54. How many points are there on the globe where by walking one mile south, one
    mile east and one mile north you reach the place where you started.

    A.

55. Give a very good method to count the number of ones in a 32 bit
    number. (caution: looping through testing each bit is not a solution).

    A.

56. What are the different ways to say, the value of x can be either a 0 or a
    1. Apparently the if then else solution has a jump when written out in
    assembly. if (x == 0) y=0 else y =x

    A.

57. (a-1) xor a == 0 - What does this do? 

    A.

58. How can you print singly linked list in reverse order? (it's a huge list
    and you cant use recursion)

    A.

59. How can you find out if there is a loop in a very long list? 

    A.

60. A character set has 1 and 2 byte characters. One byte characters have 0 as
    the first bit. You just keep accumulating the characters in a
    buffer. Suppose at some point the user types a backspace, how can you
    remove the character efficiently. ( Note: You cant store the last character
    typed because the user can type in arbitrarily many backspaces)

    A.

61. How would you reverse the bits of a number with log N arithmetic
    operations, where N is the number of bits in the integer (eg 32,64..)

    A.

62. Whats the simples way to check if the sum of two unsigned integers has
    resulted in an overflow.

    A.

63. Induction on i:1..n: Maintain the subarray with largest sum and suffix with
    largest sum and then update both after adding the i+1th element...

    A.

64. Sum of the numbers or copy i into A[i] so on till conflict. 

    A.

65. Update deltaY while incrementing x. Have to multiply so that the deltay is
    not a floating pt number.

    A.

66. Find the largest 10**n less than given number, then div etc. 

    A.

67. Infinite. 

    A.

68. Shivku said this question is garbled thru ages. 

    A.

69. reverse the pointers till you reach the end and print-and-reverse as you
    return.

    A.

70. Have two 'threads' one at twice the speed of the other traversing the list
    and see if at anytime they meet.

    A.

71. Scan the bytes backward till you reach one with the first bit set to 0. Now
    this is either a one byte character or the second byte of a two byte
    one. Either way it marks a Character boundary. Start from there an scan
    forward to find what the last character is.

    A.

72. Flip adjacent bits, then flip adjacent 2 bit sets, then 4-bits and so
    on. Each of this swap can be done in constant time using appropriate masks
    and shifts.

    A.

73. if (a+b) < a or (a+b) < b then overflow has occurred

    A.


Data structures and algorithms questions

74. Write a function and the node data structure to visit all of the nodes in a
    binary tree.

    A.

75. You know what a queue is .... Implement a queue class with Java. What is
    the cost of enqueue and dequeue? Can you improve this? What if the queue is
    full (I was using an looping array)? What kind of mechanism would you use
    to increase its size?

    A.

76. Give an algorithm that calculates the distance between two text strings
    (only operations you can have are: delete, add, and change, one by one).

    A.

77. Given the definition of a sequence (5 4 7 6 is, but 1 2 4 5 is not), write
    an algorithm to check if an arbitrary array is a sequence or not. Once I
    figured out a solution, I was asked to do a space and time complexity
    analysis.

    A.

78. Describe a situation where concurrent access would lead to inconsistency in
    your application. How would you solve this problem?

    A.

79. You are given a list of n numbers from 1 to n-1, with one of the numbers
    repeated. Devise a method to determine which number is repeated.

    A.

80. Write an algorithm to detect loop in a linked list.

    A.

81. Given the time, devise an algorithm to calculate the angle between the hour
    and minute hands of an analog clock.

    A.

82. Devise an algorithm for detecting whether palindrome (spelled the same way
    forwards and backwards). For example, "A man, a plan, a canal, Panama."

    A.

83. Given an eight-bit bitmap graphics file, devise an algorithm to convert the
    file approximation.

    A.

84. Reverse a linked list.

    A.

85. Insert in a sorted list

    A.

86. First some definitions for this problem: a) An ASCII character is one byte
    long and the most significant bit in the byte is always '0'. b) A Kanji
    character is two bytes long. The only characteristic of a Kanji character
    is that in its first byte the most significant bit is '1'. Now you are
    given an array of a characters (both ASCII and Kanji) and, an index into
    the array. The index points to the start of some character. Now you need to
    write a function to do a backspace (i.e. delete the character before the
    given index).

    A.

87. Delete an element from a doubly linked list.

    A.

88. Write a function to find the depth of a binary tree.

    A.

89. Assuming that locks are the only reason due to which deadlocks can occur in
    a system. What would be a foolproof method of avoiding deadlocks in the
    system.

    A.

90. Besides communication cost, what is the other source of inefficiency in
    RPC?

    A.

91. Ways of optimizing symbol table storage in compilers.

    A.

92. A walk-through through the symbol table functions, lookup() implementation
    etc - The interv. was on the Microsoft C team.

    A.

93. Given an array t[100] which contains numbers between 1..99. Return the
    duplicated value. Try both O(n) and O(n-square).

    A.

116. Implement an algorithm to sort an array.

     A.

117. Given a sequence of characters, how will you convert the lower case
     characters to upper case characters?

     A.

118. Write a routine that prints out a 2-D array in spiral order.

     A.

119. Count the number of set bits in a number without using a loop.

     A.

120. Give me an algorithm and C code to shuffle a deck of cards, given that the
     cards are stored in an array of ints. Try to come up with a solution that
     does not require any extra space.

     A.

121. Write a function that takes in a string parameter and checks to see
     whether or not it is an integer, and if it is then return the integer
     value.

     A.

122. How would you print out the data in a binary tree, level by level,
     starting at the top?

     A.

123. Given an array of characters which form a sentence of words, give an
     efficient algorithm to reverse the order of the words in it.

     A.

124. Write a function to find the depth of a binary tree.

     A.

125. Given a list of numbers ( fixed list) Now given any other list, how can
     you efficiently find out if there is any element in the second list that
     is an element of the first list (fixed list).

     A.

126. How would you implement a queue from a stack?

     A.

127. Write a funtion that finds repeating characters in a string.

     A.

128. Write a routine to reverse a series of numbers without using an array.

     A.

129. Give me an algorithm for telling me the number I didn't give you in a
     given range of numbers. (Numbers are given at random)

     A.


From CSRI

130. Write a function to check if two rectangles defined as below overlap or
     not.

     struct rect { 
            int top, bot, left, right; 
     } r1, r2; 

     A.

131. Write a program to print the elements of a very long linked list in
     ascending order. There may be duplicates in the list. You cannot modify
     the list or create another one. Memory is tight, speed is not a problem.

     A.

132. Write a function to reverse a singly linked list, given number of links to
     reverse.

     A.

133. Write a function to convert an int to a string.

     A.

134. Some weird problem on vector calculus with some transformation matrices
     being applied - need paper and pencil to describe it.

     A.

135. Given ships travel between points A and B, one every hour leaving from
     both ends (simultaneously), how many ships are required (minimum), if the
     journey takes 1hr 40 mts. How many ships does each ship encounter in its
     journey, and at what times?

     A.

136. Write a SetPixel(x, y) function, given a pointer to the bitmap. Each pixel
     is represented by 1 bit.  There are 640 pixels per row. In each byte,
     while the bits are numbered right to left, pixels are numbered left to
     right. Avoid multiplications and divisions to improve performance.

     A.

137. How do you represent an n-ary tree? Write a program to print the nodes of
     such a tree in breadth first order.

     A.

138. Write the 'tr' program of UNIX. Invoked as 

     tr -str1 -str2. 

     It reads stdin and prints it out to stdout, replacing every occurance of
     str1[i] with str2[i]. eg.

     tr -abc -xyz

     to be and not to be   <- input 
     to ye xnd not to ye   <- output 

     A.


C syntax, semantics and simple programming questions

139. What does the term cast refer to? Why is it used?

     A.

140. In arithmetic expressions, to what data type will the C compiler promote a
     character?

     A.

141. What is the difference between a statement and a block?

     A.

142. Increment the variable next three different ways.

     A.

143. How is a comment formed in C.

     A.

144. Can comments be nested?

     A.

145. From the standpoint of programming logic, what is the difference between a
     loop with the test at the top, and a loop where the test is at the bottom?

     A.

146. Specify the skeletons of two C loops with the test at the top.

     A.

147. Specify a C loop with the test at the bottom.

     A.

148. What is the switch statement?

     A.

149. What does a break statement do? Which control structures use it?

     A.

150. In a loop, what is the difference between a break and continue statement?

     A.

151. Where may variables be defined in C?

     A.

152. What is the difference between a variable definition and a variable
     declaration?

     A.

153. What is the purpose of a function prototype?

     A.

154. What is type checking?

     A.

155. To what does the term storage class refer?

     A.

156. List C's storage classes and what they signify.

     A.

157. State the syntax for the printf() and scanf() functions. State their one
     crucial difference with respect to their parameters.

     A.

158. With respect to function parameter passing, what is the difference between
     call-by-value and call-by-reference? Which method does C use?

     A.

159. What is a structure and a union in C?

     A.

160. Define a structure for a simple name/address record.

     A.

161. What does the typedef keyword do?

     A.

162. Use typedef to make a short-cut way to declare a pointer to the nameAddr
     structure above. Call it addrPtr.

     A.

163. Declare a variable with addrPtr called address.

     A.

164. Assuming the variable address above, how would one refer to the city
     portion of the record within a C expression?

     A.

165. What is the difference between: #include <stdio.h> and #include "stdio.h"

     A.

166. What is #ifdef used for?

     A.

167. How do you define a constant in C?

     A.

168. Why can't you nest structure definitions?

     A.

169. Can you nest function definitions?

     A.

170. What is a forward reference?

     A.

171. What are the following and how do they differ: int, long, float and
     double?

     A.

172. Define a macro called SQR which squares a number.

     A.

173. Is it possible to take the square-root of a number in C. Is there a
     square-root operator in C?

     A.

174. Using fprintf() print a single floating point number right-justified in a
     field of 20 spaces, no leading zeros, and 4 decimal places. The
     destination should be stderr and the variable is called num.

     A.

175. What is the difference between the & and && operators and the | and ||
     operators?

     A.

176. What is the difference between the -> and . operators?

     A.

177. What is the symbol for the modulus operator?

     A.

178. From the standpoint of logic, what is the difference between the fragment:

     if (next < max) next++; else next = 0;
 
     and the fragment:

     next += (next < max)? (1):(-next);
 
     A.

179. What does the following fragment do?

     while((d=c=getch(),d)!=EOF&&(c!='\t'||c!=' '||c!='\b')) *buff++ = ++c;

     A.

180. Is C case sensitive (ie: does C differentiate between upper and lower case
     letters)?

     A.

181. Specify how a filestream called inFile should be opened for random reading
     and writing. the file's name is in fileName.

     A.

182. What does fopen() return if successful. If unsuccessful?

     A.

183. What is the void data type? What is a void pointer?

     A.

184. Declare a pointer called fnc which points to a function that returns an
     unsigned long.

     A.

185. Declare a pointer called pfnc which points to a function that returns a
     pointer to a structure of type nameAddr.

     A.

186. It is possible for a function to return a character, an integer, and a
     floating point number. Is it possible for a function to return a
     structure? Another function?

     A.

187. What is the difference between an lvalue and an rvalue?

     A.

188. Given the decimal number 27, how would one express it as a hexadecimal
     number in C?

     A.

189. What is malloc()?

     A.

190. What is the difference between malloc() and calloc()?

     A.

191. What kind of problems was C designed to solve?

     A.

192. write C code for deleting an element from a linked listy traversing a
     linked list efficient way of elimiating duplicates from an array

     A.

193. Declare a void pointer

     A.

194. Make the pointer aligned to a 4 byte boundary in a efficient manner

     A.

195. What is a far pointer (in DOS)

     A.

196. Write an efficient C code for 'tr' program. 'tr' has two command line
     arguments. They both are strings of same length. tr reads an input file,
     replaces each character in the first string with the corresponding
     character in the second string. eg. 'tr abc xyz' replaces all 'a's by
     'x's, 'b's by 'y's and so on.

     A.

197. Write C code to implement strtok() 'c' library function.

     A.

198. Implement strstr(), strcpy(), strtok() etc

     A.

199. Reverse a string.

     A.

200. Given a linked list which is sorted, how will you insert in sorted way.

     A.

201. Write a function that allocates memory for a two-dimensional array of
     given size (parameter x & y)

     A.

202. Write source code for printHex(int i) in C/C++ 

     A.

203. Write a function that finds the last instance of a character in a string.

     A.


C++ syntax, semantics and concepts questions 

204. What is an object in C++? 

     A.

205. What is a message? 

     A.

206. What is a class? 

     A.

207. What is an instance? 

     A.

208. What is a super-class? 

     A.

209. What is inheritance? 

     A.

210. To what does message protocol refer? 

     A.

211. What is polymorphism? 

     A.

212. What are instance variables? 

     A.

213. What are class variables 

     A.

241. How is memory allocated/deallocated in C ? How about C++ ? 

     A.

242. What is UML ? 

     A.

243. What is the difference between a shallow copy and a deep copy ? 

     A.

244. What are the differences between new and malloc? 

     A.

245. What is the difference between delete and delete[]? 

     A.

246. What are the differences between a struct in C and in C++? 

     A.

247. What are the advantages/disadvantages of using #define? 

     A.

248. What are the advantages/disadvantages of using inline and const? 

     A.

249. What is the difference between a pointer and a reference? 

     A.

250. When would you use a pointer? A reference? 

     A.

251. What does it mean to take the address of a reference? 

     A.

252. What does it mean to declare a function or variable as static? 

     A.

253. What is the order of initalization for data? 

     A.

254. What is name mangling/name decoration? 

     A.

255. What kind of problems does name mangling cause? 

     A.

256. How do you work around them? 

     A.

257. What is a class? 

     A.

258. What are the differences between a struct and a class in C++? 

     A.

259. What is the difference between public, private, and protected access?

     A.

260. For class CFoo { }; what default methods will the compiler generate for
     you>?

     A.

261. How can you force the compiler to not generate them?

     A.

262. What is the purpose of a constructor? Destructor?

     A.

263. What is a constructor initializer list?

     A.

264. When must you use a constructor initializer list?

     A.

265. What is a: Constructor? Destructor? Default constructor? Copy constructor?
     Conversion constructor?

     A.

266. What does it mean to declare a... member function as virtual? member
     function as static? member varible as static? destructor as static?

     A.

267. Can you explain the term "resource acqusition is initialization?" 

     A.

268. What is a "pure virtual" member function? 

     A.

269. What is the difference between public, private, and protected inheritance?

     A.

270. What is virtual inheritance? 

     A.

271. What is placement new? 

     A.

272. What is the difference between operator new and the new operator? 

     A.

273. What is exception handling? 

     A.

274. Explain what happens when an exception is thrown in C++. 

     A.

275. What happens if an exception is not caught? 

     A.

276. What happens if an exception is throws from an object's constructor? 

     A.

277. What happens if an exception is throws from an object's destructor? 

     A.

278. What are the costs and benefits of using exceptions? 

     A.

279. When would you choose to return an error code rather than throw an
     exception?

     A.

280. What is a template? 

     A.

281. What is partial specialization or template specialization? 

     A.

282. How can you force instantiation of a template? 

     A.

283. What is an iterator? 

     A.

284. What is an algorithm (in terms of the STL/C++ standard library)? 

     A.

285. What is std::auto_ptr? 

     A.

286. What is wrong with this statement? std::auto_ptr ptr(new char[10]); 

     A.

287. It is possible to build a C++ compiler on top of a C compiler. How would
     you do this?

     A.

288. What output does the following code generate? Why? What output does it
     generate if you make A::Foo() a pure virtual function?

     A.

289. What output does this program generate as shown? Why? 

     A.

290. C++ ( what is virtual function ? what happens if an error occurs in
     constructor or destructor.  Discussion on error handling, templates,
     unique features of C++. What is different in C++, ( compare with unix).

     A.

291. I was given a c++ code and was asked to find out the bug in that. The bug
     was that he declared an object locally in a function and tried to return
     the pointer to that object. Since the object is local to the function, it
     no more exists after returning from the function. The pointer, therefore,
     is invalid outside.

     A.


Questions for ANSI-Knowledgeable Applicants 

292. What is a mutable member? 

     A.

293. What is an explicit constructor? 

     A.

294. What is the Standard Template Library? 

     A.

295. Describe run-time type identification. 

     A.

296. What problem does the namespace feature solve? 

     A.

297. Are there any new intrinsic (built-in) data types? 

     A.


Design 

298. Draw a class diagram (UML) for a system. (They described the system in
     plain english).

     A.

299. Which do you prefer, inheritance or delegation? Why? 

     A.

300. What is the difference between RMI and IIOP? 

     A.


Java questions 

301. http://www.javaprepare.com/quests/question.html 

     A.


Misc. Questions (Design pattern, HTTP, OOP, SQL) 

302. What's the difference between SQL, DDL, and DML? 

     A.

303. What's a join? An inner join? An outer join? 

     A.

304. Describe HTTP. 

     A.

305. What's a design pattern? 

     A.

306. Can you explain the singleton, vistor, facade, or handle class design
     pattern?

     A.

307. When you do an ls -l, describe in detail everything that comes up on the
     screen.

     A.

308. Tell me three ways to find an IP address on a Unix box. 

     A.

309. Write a bubble sort. 

     A.

310. Write a linked list. 

     A.

311. Describe an object. 

     A.

312. What does object-oriented mean to you. 

     A.

313. Can you explain what a B tree is? 

     A.

314. What's the difference between UDP and TCP? 

     A.

315. What is ICMP? 

     A.

316. What's the difference between a stack and a Queue? 

     A.

317. Do you know anything about the protection rings in the PC architecture?

     A.

318. How much hardware/Assembler/Computer Architecture experience do you have.

     A.

319. Explain final, finalize, and finally. When the finalize is invoked? How
     does GC work? etc.

     A.

320. What is your experience with Servlet and JSP? 

     A.

321. What is the Prototype design pattern? 

     A.

322. In a system that you are designing and developing, a lot of small changes
     are expected to be committed at the end of a method call (persisted to the
     DB). If you don't want to query the database frequently.  what would you
     do?

     A.

323. Give an example in which you will combine several design patterns, and
     explain how the system can benefit from that.

     A.

324. Why would you apply design patterns (benefits)?

     A.

325. What is a two-phase commit?

     A.

326. What will happen if one of your web-server or appserver crashs during its
     execution?

     A.

327. What are various problems unique to distributed databases

     A.

328. Describe the file system layout in the UNIX OS

     A.

329. what is disk interleaving

     A.

330. why is disk interleaving adopted

     A.

331. given a new disk, how do you determine which interleaving is the best

     A.

332. give 1000 read operations with each kind of interleaving determine the
     best interleaving from the statistics

     A.

333. draw the graph with performace on one axis and 'n' on another, where 'n'
     in the 'n' in n-way disk interleaving. (a tricky question, should be
     answered carefully)

     A.

334. Design a memory management scheme.

     A.

335. What sort of technique you would use to update a set of files over a
     network, where a server contains the master copy.

     A.


General questions

336. How did you get into computer science?

     A. 

337. What kind of technical publications (print or online) do you read on a
     regular basis?

     A.

338. What was the last book you read (does not have to be job related!)

     A.

339. If you could recommend one resource (book, web site, etc.) to a new
     software developer just out of school, what would it be?

     A.

340. What was the most interesting project that you worked on? 

     A.

341. What was the most challenging project that you worked on? 

     A.

342. If you could have any job in the world, what would it be? 

     A.

343. Tell me about your favorite class. 

     A.

344. Tell me about your favorite project [with lots of follow-up questions].

     A.

345. Tell me about a something you did that was unsuccessful, a project or
     class that didn't go well.

     A. 

346. Do you prefer a structured or unstructured working environment.

     A. 

347. A chemist calls you up and says his Netscape isn't working. What's wrong
     and how do you find out?

     A. 

348. How do you prioritize multiple projects?

     A.

349. Tell me about previous jobs?

     A.

350. What are your greatest strengths and weaknesses?

     A.

351. Tell us about yourself.

     A.

352. Where would you like to be in five years?

     A.

353. How do you see yourself fitting in to this company?

     A.

354. Do you have any questions for me?

     A.

355. Why did you leave your last job.

     A.

356. Did you finance your own education?

     A.

357. Are you good with people?

     A.

358. Have you experience working on a group project?

     A.

359. How well do you know the windows menus?

     A.

360. What was the hardest program error for you to find and correct?

     A.

361. What did you find hardest when working with others in a project?

     A.

362. What is a tool or system that you learned on your own? i.e. not in a class
     room?

     A.

363. As a developer, would you prefer to use application server? Why?

     A.

364. How would go about finding out where to find a book in a library. (You
     don't know how exactly the books are organized beforehand).

     A.

365. Tradeoff between time spent in testing a product and getting into the
     market first.

     A.

366. What to test for given that there isn't enough time to test everything you
     want to.

     A.

367. Why do u think u are smart.

     A.

368. Questions on the projects listed on the Resume.

     A.

369. Do you want to know any thing about the company.( Try to ask some relevant
     and interesting question).

     A.

370. How long do u want to stay in USA and why? 

     A.

371. What are your geographical preference? 

     A.

372. What are your expectations from the job. 

     A.

